<.main_content title={gettext("Settings")} flash={@flash}>
  <%= if @is_legacy_account? do %>
    <div class="p-4 rounded-md bg-yellow-50">
      <div class="flex">
        <div class="flex-shrink-0">
          <!-- Heroicon name: solid/exclamation -->
          <svg class="w-5 h-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-yellow-800"><%= gettext("Attention needed") %></h3>
          <div class="mt-2 text-sm text-yellow-700">
            <p><%= gettext("You're signed in using an old account that does not have an email or password set.") %></p>
            <p><%= gettext("Please add an email to your account to access newer accounts feature like 2FA and Webauthn.") %></p>
            <.form for={:add_email} class="mt-5 sm:flex sm:items-center" phx-submit="add-email">
              <div class="w-full sm:max-w-xs">
                <label for="email" class="sr-only"><%= gettext("Email") %></label>
                <input type="email" name="email" id="email" class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm" placeholder="you@example.com">
              </div>
              <button type="submit" class="inline-flex items-center justify-center w-full px-4 py-2 mt-3 font-medium text-white border border-transparent rounded-md shadow-sm bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">Save</button>
            </.form>
          </div>
        </div>
      </div>
    </div>
  <% else %>
    <.content_section title={gettext("Email")} subtitle={gettext("We don't send spam.")}}>
      <%= if !@current_user.confirmed_at do %>
        <div class="p-4 mb-5 rounded-md bg-yellow-50">
          <div class="flex">
            <div class="flex-shrink-0">
              <!-- Heroicon name: solid/exclamation -->
              <svg class="w-5 h-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-yellow-800"><%= gettext("Attention needed") %></h3>
              <div class="mt-2 text-sm text-yellow-700">
                <p><%= gettext("Please confirm your email address to access all features.") %></p>
                <.link id="resend-confirmation-btn" link_type="button" phx-update="ignore" class="mt-2 font-bold" phx-click={JS.push("resend-confirmation") |> JS.hide()} phx-disable-with={gettext("Sending...")} label={gettext("Resend confirmation instructions.")} />
              </div>
            </div>
          </div>
        </div>
      <% end %>
      <.form let={f} for={@email_changeset} phx-submit="update-email">
        <div class="shadow sm:rounded-md sm:overflow-hidden">
          <div class="px-4 py-5 bg-white sm:p-6">
            <div class="grid grid-cols-6 gap-6">
              <div class="col-span-6 sm:col-span-4">
                <%= InputHelpers.input(f, :email) %>
                <%= InputHelpers.input(f, :current_password) %>
              </div>
            </div>
          </div>
          <div class="px-4 py-3 text-right bg-gray-50 sm:px-6">
            <span class="inline-flex rounded-md shadow-sm">
              <.button button_type="submit" label={gettext("Change email")} />
            </span>
          </div>
        </div>
      </.form>
    </.content_section>

    <.content_section title={gettext("Password")} subtitle={gettext("Keep your account secure.")}}>
      <.form let={f} for={@password_changeset} phx-submit="update-password" phx-change="validate-password" action={Routes.user_settings_path(@socket, :update_password)} phx-trigger-action={@password_trigger_action}>
        <div class="shadow sm:rounded-md sm:overflow-hidden">
          <div class="px-4 py-5 bg-white sm:p-6">
            <div class="grid grid-cols-6 gap-6">
              <div class="col-span-6 sm:col-span-4">
                <%= InputHelpers.input(f, :password, label: gettext("New password"), input_opts: [phx_debounce: "blur", value: input_value(f, :password)]) %>
                <%= InputHelpers.input(f, :password_confirmation, label: gettext("Confirm new password"), input_opts: [phx_debounce: "blur", value: input_value(f, :password_confirmation)]) %>
                <div class="space-y-1 form-control">
                  <%= label f, :current_password, gettext("Current password"), class: "form-control__label", for: "current_password_for_password" %>
                  <div class="form-control__wrapper">
                    <%= password_input f, :current_password, class: InputHelpers.form_input_classes(f, :current_password), name: :current_password, id: "current_password_for_password", phx_debounce: "blur", value: @current_password %>
                    <%= GuildaWeb.ErrorHelpers.error_icon(f, :current_password, name: :current_password) %>
                  </div>
                    <%= GuildaWeb.ErrorHelpers.error_tag(f, :current_password, name: :current_password) %>
                </div>
              </div>
            </div>
          </div>
          <div class="px-4 py-3 text-right bg-gray-50 sm:px-6">
            <span class="inline-flex rounded-md shadow-sm">
              <.button button_type="submit" label={gettext("Change password")} />
            </span>
          </div>
        </div>
      </.form>
    </.content_section>

    <%= if @current_user.confirmed_at do %>
      <.live_component
        module={GuildaWeb.UserSettingsLive.TOTPComponent}
        id={:totp}
        current_user={@current_user}
        audit_context={@audit_context}
      />

      <.content_section title={gettext("Connected accounts")} subtitle={gettext("Add other ways to sign in.")}}>
        <.card>
          <div class="flex flex-row items-center justify-center">
            <div class="flex flex-col items-center text-center">
            <%= svg_icon("telegram-plane-brands", class: "h-16 #{if @current_user.telegram_id, do: "text-primary-500", else: "text-primary-200"}") %>
            <%= if @current_user.telegram_id do %>
              <.button variant="outline" color="danger" label={gettext("Disconnect")} size="xs" id="disconnect-telegram-trigger" phx-click={show_modal("disconnect-telegram-modal")} />
              <.modal
                type="delete"
                id="disconnect-telegram-modal"
                on_confirm={
                  JS.push("disconnect-telegram")
                  |> hide_modal("disconnect-telegram-modal")
                }
                on_cancel={focus("body", "#disconnect-telegram-trigger")}
              >
                <%= gettext("Are you sure you want to disconnect your Telegram account?") %>
                <:cancel><%= gettext("Cancel") %></:cancel>
                <:confirm><%= gettext("Disconnect Telegram") %></:confirm>
              </.modal>
            <% else %>
              <div id="telegram-login-button" class="flex items-center justify-center text-center" phx-update="ignore">
                <script async src="https://telegram.org/js/telegram-widget.js?18" data-telegram-login={GuildaWeb.AuthController.telegram_bot_username()} data-size="large" data-auth-url={Routes.auth_path(@socket, :telegram_callback)} data-request-access="write"></script>
              </div>
            <% end %>
            </div>
          </div>
        </.card>
      </.content_section>
    <% end %>
  <% end %>

  <%= if @is_legacy_account? || @current_user.confirmed_at do %>
    <.content_section title={gettext("Location")} subtitle={gettext("Share your location to be listed on the members map")}}>
      <div class="bg-white shadow sm:rounded-lg">
        <%= if @current_user.geom do %>
          <div class="px-4 py-5 sm:p-6">
            <h3 class="mb-5 text-lg font-medium leading-6 text-gray-900">
              <%= gettext("You shared your location with the Guilda") %>
            </h3>
            <.user_coordinates coordinates={@current_user.geom.coordinates} />
            <div class="flex justify-end mt-5">
              <.button label={gettext("Remove location")} id="remove-location-trigger" phx-click={show_modal("remove-location-modal")} variant="outline" color="danger" />
            </div>
          </div>
        <% else %>
          <%= if @current_user.telegram_id do %>
          <div class="px-4 py-5 sm:p-6">
            <h3 class="text-lg font-medium leading-6 text-gray-900">
              <%= gettext("You're not sharing your location") %>
            </h3>
            <div class="mt-2 sm:flex sm:items-start sm:justify-between">
              <div class="max-w-xl prose text-gray-600">
                <p><%= raw gettext("To register on the members map, send your geographic location to our bot (%{link}). Sending location depends on the use of GPS, and only Telegram mobile clients (Android and iPhone) support sending coordinates.", link: safe_to_string(link("@#{@bot_name}", to: "https://t.me/#{@bot_name}"))) %></p>
                <p><%= raw gettext("It is important to send a private message <strong>directly</strong> to our bot %{link} with your location. <strong>Don't send your location to the group!</strong>", link: safe_to_string(link("@#{@bot_name}", to: "https://t.me/#{@bot_name}"))) %></p>
                <p><%= gettext("To ensure your privacy, all shared locations are saved with a 10km error margin.") %></p>
              </div>
            </div>
          </div>
          <% else %>
            <.card>
              <p class="max-w-xl prose text-gray-600"><%= gettext("Connect your Telegram account to be able to share your location.") %></p>
            </.card>
          <% end %>
        <% end %>
      </div>

      <.modal
        type="delete"
        id="remove-location-modal"
        on_confirm={
          JS.push("remove-location")
          |> hide_modal("remove-location-modal")
        }
        on_cancel={focus("body", "#remove-location-trigger")}
      >
        <%= gettext("Are you sure you want to remove your location?") %>
        <:cancel><%= gettext("Cancel") %></:cancel>
        <:confirm><%= gettext("Remove location") %></:confirm>
      </.modal>
    </.content_section>
  <% end %>
</.main_content>
